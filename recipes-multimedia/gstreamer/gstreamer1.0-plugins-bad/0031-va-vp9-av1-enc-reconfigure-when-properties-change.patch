From 6b919fefba205412b1597aabd372d4f563841e94 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?V=C3=ADctor=20Manuel=20J=C3=A1quez=20Leal?=
 <vjaquez@igalia.com>
Date: Wed, 27 Mar 2024 19:50:19 +0100
Subject: [PATCH 031/117] va{vp9,av1}enc: reconfigure when properties change

Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/6471>
---
 sys/va/gstvaav1enc.c | 6 ++++++
 sys/va/gstvavp9enc.c | 8 ++++++++
 2 files changed, 14 insertions(+)

diff --git a/sys/va/gstvaav1enc.c b/sys/va/gstvaav1enc.c
index 64247d154..d37b28036 100644
--- a/sys/va/gstvaav1enc.c
+++ b/sys/va/gstvaav1enc.c
@@ -4176,6 +4176,7 @@ gst_va_av1_enc_set_property (GObject * object, guint prop_id,
       break;
     case PROP_QP:
       self->prop.qp = g_value_get_uint (value);
+      g_atomic_int_set (&GST_VA_BASE_ENC (self)->reconf, TRUE);
       break;
     case PROP_MAX_QP:
       self->prop.max_qp = g_value_get_uint (value);
@@ -4185,6 +4186,7 @@ gst_va_av1_enc_set_property (GObject * object, guint prop_id,
       break;
     case PROP_BITRATE:
       self->prop.bitrate = g_value_get_uint (value);
+      g_atomic_int_set (&GST_VA_BASE_ENC (self)->reconf, TRUE);
       break;
     case PROP_NUM_TILE_COLS:
       self->prop.num_tile_cols = g_value_get_uint (value);
@@ -4197,15 +4199,19 @@ gst_va_av1_enc_set_property (GObject * object, guint prop_id,
       break;
     case PROP_TARGET_USAGE:
       self->prop.target_usage = g_value_get_uint (value);
+      g_atomic_int_set (&GST_VA_BASE_ENC (self)->reconf, TRUE);
       break;
     case PROP_TARGET_PERCENTAGE:
       self->prop.target_percentage = g_value_get_uint (value);
+      g_atomic_int_set (&GST_VA_BASE_ENC (self)->reconf, TRUE);
       break;
     case PROP_CPB_SIZE:
       self->prop.cpb_size = g_value_get_uint (value);
+      g_atomic_int_set (&GST_VA_BASE_ENC (self)->reconf, TRUE);
       break;
     case PROP_RATE_CONTROL:
       self->prop.rc_ctrl = g_value_get_enum (value);
+      g_atomic_int_set (&GST_VA_BASE_ENC (self)->reconf, TRUE);
       break;
     case PROP_MBBRC:{
       /* Macroblock-level rate control.
diff --git a/sys/va/gstvavp9enc.c b/sys/va/gstvavp9enc.c
index c50067dfb..ed66551b0 100644
--- a/sys/va/gstvavp9enc.c
+++ b/sys/va/gstvavp9enc.c
@@ -2812,6 +2812,7 @@ gst_va_vp9_enc_set_property (GObject * object, guint prop_id,
       break;
     case PROP_QP:
       self->prop.qp = g_value_get_uint (value);
+      g_atomic_int_set (&GST_VA_BASE_ENC (self)->reconf, TRUE);
       break;
     case PROP_MAX_QP:
       self->prop.max_qp = g_value_get_uint (value);
@@ -2821,24 +2822,31 @@ gst_va_vp9_enc_set_property (GObject * object, guint prop_id,
       break;
     case PROP_BITRATE:
       self->prop.bitrate = g_value_get_uint (value);
+      g_atomic_int_set (&GST_VA_BASE_ENC (self)->reconf, TRUE);
       break;
     case PROP_TARGET_USAGE:
       self->prop.target_usage = g_value_get_uint (value);
+      g_atomic_int_set (&GST_VA_BASE_ENC (self)->reconf, TRUE);
       break;
     case PROP_TARGET_PERCENTAGE:
       self->prop.target_percentage = g_value_get_uint (value);
+      g_atomic_int_set (&GST_VA_BASE_ENC (self)->reconf, TRUE);
       break;
     case PROP_CPB_SIZE:
       self->prop.cpb_size = g_value_get_uint (value);
+      g_atomic_int_set (&GST_VA_BASE_ENC (self)->reconf, TRUE);
       break;
     case PROP_RATE_CONTROL:
       self->prop.rc_ctrl = g_value_get_enum (value);
+      g_atomic_int_set (&GST_VA_BASE_ENC (self)->reconf, TRUE);
       break;
     case PROP_LOOP_FILTER_LEVEL:
       self->prop.filter_level = g_value_get_int (value);
+      g_atomic_int_set (&GST_VA_BASE_ENC (self)->reconf, TRUE);
       break;
     case PROP_SHARPNESS_LEVEL:
       self->prop.sharpness_level = g_value_get_uint (value);
+      g_atomic_int_set (&GST_VA_BASE_ENC (self)->reconf, TRUE);
       break;
     case PROP_MBBRC:{
       /* Macroblock-level rate control.
-- 
2.43.0

